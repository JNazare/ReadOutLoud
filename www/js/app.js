// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module("storyteller", ["ionic", "ngRoute", "kinvey"]);

  app.config(function($compileProvider) {
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|tel):/);
  });

  app.config(function($routeProvider, $locationProvider) {
    $routeProvider.when("/", {
      templateUrl: "library.html",
      controller: "HomeCtrl"
    });
    $routeProvider.when("/login", {
      templateUrl: "login.html",
      controller: "LoginCtrl"
    });
    $routeProvider.when("/signup", {
      templateUrl: "signup.html",
      controller: "SignupCtrl"
    });
    $routeProvider.when("/settings", {
      templateUrl: "settings.html",
      controller: "SettingsCtrl"
    });
    $routeProvider.when("/book/:book_id", {
      templateUrl: "book.html",
      controller: "BookCtrl"
    });
    $routeProvider.otherwise({
      redirectTo: "/login"
    });
  });

  app.controller("LoginCtrl", function($scope, $kinvey, $location) {
    $scope.email = "";
    $scope.password = "";
    $scope.submit = function() {
      var promise;
      promise = $kinvey.User.login({
        username: $scope.email,
        password: $scope.password
      });
      return promise.then(function(activeUser) {
        $scope.activeuser = activeUser;
        $location.path("/");
      });
    };
  });

  app.controller("SignupCtrl", function($scope, $kinvey, $location) {
    $scope.email = "";
    $scope.password = "";
    $scope.nativelang = "";
    $scope.submit = function() {
      var promise;
      promise = $kinvey.User.signup({
        username: $scope.email,
        password: $scope.password,
        nativelang: $scope.nativelang
      });
      return promise.then(function(activeUser) {
        $scope.activeuser = activeUser;
        $location.path("/");
      });
    };
  });

  app.controller("SettingsCtrl", function($scope, $kinvey, $location) {
    var activeUser;
    $scope.nativelang = "";
    activeUser = $kinvey.getActiveUser();
    $scope.submit = function() {
      var promise;
      if ($scope.nativelang) {
        activeUser.nativelang = $scope.nativelang;
        promise = $kinvey.User.update(activeUser);
        promise.then(function(activeUser) {
          $scope.activeuser = activeUser;
          $location.path("/");
        });
      }
    };
  });

  app.controller("HomeCtrl", function($scope, $kinvey, $location) {
    var promise;
    promise = $kinvey.init({
      appKey: "kid_bJe2dFWlU",
      appSecret: "a22c88799ce248298aff031b96946969",
      sync: {
        enable: true
      }
    });
    promise.then(function(activeUser) {
      var query;
      if (activeUser) {
        $scope.activeuser = activeUser;
        query = $kinvey.DataStore.find("books");
        query.then(function(books) {
          $scope.books = books;
        });
        return;
      } else {
        $location.path("/login");
        return;
      }
    });
  });

  app.controller("BookCtrl", [
    "$scope", "$location", "$kinvey", "$ionicSlideBoxDelegate", "$sce", function($scope, $location, $kinvey, $ionicSlideBoxDelegate, $sce) {
      var getuser;
      $scope.count = 0;
      getuser = $kinvey.User.me();
      getuser.then(function(activeUser) {
        var book_id, query;
        $scope.activeuser = activeUser;
        $ionicSlideBoxDelegate.update();
        book_id = $location.path().split("/")[2];
        query = $kinvey.DataStore.get("books", book_id);
        query.then(function(book) {
          $scope.pages = book.pages;
          $ionicSlideBoxDelegate.update();
          $scope.clickMe = function(clickEvent) {
            var text, utterance;
            text = $scope.pages[clickEvent].text;
            utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            utterance.rate = 0.1;
            window.speechSynthesis.speak(utterance);
          };
          $scope.addSpans = function(string) {
            var i, word_html, words;
            words = string.split(" ");
            word_html = "";
            i = 0;
            while (i < words.length) {
              word_html += '<span class="highlight">' + words[i] + '</span> ';
              i++;
            }
            return $scope.result = $sce.trustAsHtml(word_html);
          };
        });
      });
    }
  ]);

  app.run(function($ionicPlatform) {
    $ionicPlatform.ready(function() {
      if (window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }
      if (window.StatusBar) {
        StatusBar.styleDefault();
      }
    });
  });

}).call(this);
